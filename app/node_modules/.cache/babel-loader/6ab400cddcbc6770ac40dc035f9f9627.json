{"ast":null,"code":"import \"antd/es/table/style/css\";\nimport _Table from \"antd/es/table\";\nimport _classCallCheck from \"/Users/marcinskowyra/Workplace/DaroApp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/marcinskowyra/Workplace/DaroApp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/marcinskowyra/Workplace/DaroApp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/marcinskowyra/Workplace/DaroApp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/marcinskowyra/Workplace/DaroApp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/marcinskowyra/Workplace/DaroApp/src/components/guestList/table.jsx\";\nimport React, { Component } from \"react\";\nimport { columns } from \"./tableColumns.js\";\n\nvar Table =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Table, _Component);\n\n  function Table() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Table)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      guests: [{\n        key: \"1\",\n        name: \"Mike\",\n        surname: \"Tajson\",\n        hall: \"1\",\n        tableNumber: \"10\",\n        cost: \"\".concat(150, \" zl\"),\n        couple: \"4\"\n      }, {\n        key: \"2\",\n        name: \"John\",\n        surname: \"RamboX\",\n        hall: \"2\",\n        tableNumber: \"15\",\n        cost: \"\".concat(150, \" zl\"),\n        couple: \"7\"\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"render\",\n    value: function render() {\n      var rowSelection = {\n        onChange: function onChange(selectedRowKeys, selectedRows) {\n          console.log(\"selectedRowKeys: \".concat(selectedRowKeys), \"selectedRows: \", selectedRows);\n        },\n        getCheckboxProps: function getCheckboxProps(record) {\n          return {\n            disabled: record.name === \"Disabled User\",\n            // Column configuration not to be checked\n            name: record.name\n          };\n        }\n      };\n      return React.createElement(_Table, {\n        rowSelection: rowSelection,\n        dataSource: this.state.guests,\n        columns: columns,\n        style: {\n          padding: \"30px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Table;\n}(Component);\n\nexport default Table;","map":{"version":3,"sources":["/Users/marcinskowyra/Workplace/DaroApp/src/components/guestList/table.jsx"],"names":["React","Component","columns","Table","state","guests","key","name","surname","hall","tableNumber","cost","couple","rowSelection","onChange","selectedRowKeys","selectedRows","console","log","getCheckboxProps","record","disabled","padding"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,OAAT,QAAwB,mBAAxB;;IAEMC,K;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,MAAM,EAAE,CACN;AACEC,QAAAA,GAAG,EAAE,GADP;AAEEC,QAAAA,IAAI,EAAE,MAFR;AAGEC,QAAAA,OAAO,EAAE,QAHX;AAIEC,QAAAA,IAAI,EAAE,GAJR;AAKEC,QAAAA,WAAW,EAAE,IALf;AAMEC,QAAAA,IAAI,YAAK,GAAL,QANN;AAOEC,QAAAA,MAAM,EAAE;AAPV,OADM,EAUN;AACEN,QAAAA,GAAG,EAAE,GADP;AAEEC,QAAAA,IAAI,EAAE,MAFR;AAGEC,QAAAA,OAAO,EAAE,QAHX;AAIEC,QAAAA,IAAI,EAAE,GAJR;AAKEC,QAAAA,WAAW,EAAE,IALf;AAMEC,QAAAA,IAAI,YAAK,GAAL,QANN;AAOEC,QAAAA,MAAM,EAAE;AAPV,OAVM;AADF,K;;;;;;6BAuBC;AACP,UAAMC,YAAY,GAAG;AACnBC,QAAAA,QAAQ,EAAE,kBAACC,eAAD,EAAkBC,YAAlB,EAAmC;AAC3CC,UAAAA,OAAO,CAACC,GAAR,4BACsBH,eADtB,GAEE,gBAFF,EAGEC,YAHF;AAKD,SAPkB;AAQnBG,QAAAA,gBAAgB,EAAE,0BAAAC,MAAM;AAAA,iBAAK;AAC3BC,YAAAA,QAAQ,EAAED,MAAM,CAACb,IAAP,KAAgB,eADC;AACgB;AAC3CA,YAAAA,IAAI,EAAEa,MAAM,CAACb;AAFc,WAAL;AAAA;AARL,OAArB;AAaA,aACE;AACE,QAAA,YAAY,EAAEM,YADhB;AAEE,QAAA,UAAU,EAAE,KAAKT,KAAL,CAAWC,MAFzB;AAGE,QAAA,OAAO,EAAEH,OAHX;AAIE,QAAA,KAAK,EAAE;AAAEoB,UAAAA,OAAO,EAAE;AAAX,SAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAQD;;;;EA9CiBrB,S;;AAiDpB,eAAeE,KAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Table as TableAntd } from \"antd\";\nimport { columns } from \"./tableColumns.js\";\n\nclass Table extends Component {\n  state = {\n    guests: [\n      {\n        key: \"1\",\n        name: \"Mike\",\n        surname: \"Tajson\",\n        hall: \"1\",\n        tableNumber: \"10\",\n        cost: `${150} zl`,\n        couple: \"4\"\n      },\n      {\n        key: \"2\",\n        name: \"John\",\n        surname: \"RamboX\",\n        hall: \"2\",\n        tableNumber: \"15\",\n        cost: `${150} zl`,\n        couple: \"7\"\n      }\n    ]\n  };\n\n  render() {\n    const rowSelection = {\n      onChange: (selectedRowKeys, selectedRows) => {\n        console.log(\n          `selectedRowKeys: ${selectedRowKeys}`,\n          \"selectedRows: \",\n          selectedRows\n        );\n      },\n      getCheckboxProps: record => ({\n        disabled: record.name === \"Disabled User\", // Column configuration not to be checked\n        name: record.name\n      })\n    };\n    return (\n      <TableAntd\n        rowSelection={rowSelection}\n        dataSource={this.state.guests}\n        columns={columns}\n        style={{ padding: \"30px\" }}\n      />\n    );\n  }\n}\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}